@page "/"
@using System.Text.Json
@inject HttpClient Http;
@using Blazorons3.Models;

<PageTitle>Index</PageTitle>
<h1>Hello, world!</h1>
Welcome to your new app.
<SurveyPrompt Title="How is Blazor working for you?" />
<button class="btn btn-primary" @onclick="Clicked">Get Branches</button>
<p role="status"> @currentMessage</p>
@if (show)
{
    <div>
        <h1>Call web API from a Blazor Server Razor component</h1>

        @if (getBranchesError)
        {
            <p>Unable to get branches from GitHub. Please try again later.</p>
        }
        else
        {
            <ul>
                @foreach (var branch in branches)
                {
                    <li>@branch.Name</li>
                }
            </ul>
        }
    </div>
}


@code {
    private IEnumerable<GitHubBranch> branches = Array.Empty<GitHubBranch>();
    private bool getBranchesError;
    private bool show;
    private string currentMessage = "";
    protected async Task Clicked()

    {
        show = false;
        currentMessage = "Loading";
        await fetchGitHubBranches();
        show = true;
        currentMessage = "Loaded";
    }

    private async Task fetchGitHubBranches()
    {

        var request = new HttpRequestMessage(HttpMethod.Get,
    "https://api.github.com/repos/dotnet/AspNetCore.Docs/branches");
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");
        var response = await Http.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            var data = await JsonSerializer.DeserializeAsync<IEnumerable<GitHubBranch>>(responseStream);
            if (data is not null)
            {
                branches = data;
            }
        }
        else
        {
            getBranchesError = true;
        }
    }


}